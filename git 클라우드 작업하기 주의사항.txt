정리하면, fetch 가 진행되기 전까지 로컬작업 환경은 리포지토리의 상황을 알지 못하며
 fetch 를 통해 repository 의 정보를 가져오며 이때 로컬파일들에 어떠한 변경도 만들지 않는다.  

이렇게 업데이트 된 정보를 이용해서 merge, log 등의 작업을 진행한다. 따라서, 특히 리포지토리에
 push 등의 작업을 할 경우 내 로컬 작업 환경에 리포지토리의 커밋내역을 정확히 가지고 있지 않으면 
정상적으로 push 가 되지 않고 에러가 난다.

그래서 일반적(충돌- conflict 이 일어나지 않는 경우)으로 push 할 때 작업수행은 아래와 같이 진행한다. 

git add . && git commit -m 'message' && git fetch origin master && git merge origin/master && git push origin master


---------- 여러대의 pc에서 깃허브로 작업하기
1. 새로운 pc로 가서 git 설치
2. git clone "repository 주소"로 내용 복사
3. 작업한 뒤 git add . && git commit -m 'message' && git fetch origin master && git merge origin/master && git push origin master
4. git Id와 password를 묻는 팝업 뜸
   !!!! 이때 반드시 기본브라우저가 chrome이나 edge여야함. explore로 되어있으면 authorize버튼이 안 눌러짐 

---------- react 프로젝트 github에서 받아서 실행하는 방법
Open your terminal and then type

$ git clone {the url to the GitHub repo}

This clones the repo

cd into the new folder and typegit

$ npm install (nodejs 미리 설치 되어있어야 함)

This installs the required dependencies

To run the React project.
$ npm start


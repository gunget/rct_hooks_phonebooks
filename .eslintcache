[{"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\index.js":"1","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Appbar.jsx":"2","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\useFetch.jsx":"3","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Search.jsx":"4","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbReducer.jsx":"5","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbStore.jsx":"6","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\InputForm.jsx":"7","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\App.js":"8","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\LocalStorageBtn.jsx":"9","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\PhoneInfo.jsx":"10","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignIn.jsx":"11","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignUp.jsx":"12","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\NotFound.jsx":"13"},{"size":174,"mtime":1607039129838,"results":"14","hashOfConfig":"15"},{"size":1332,"mtime":1608776817852,"results":"16","hashOfConfig":"15"},{"size":1954,"mtime":1608700460868,"results":"17","hashOfConfig":"15"},{"size":2643,"mtime":1608609274540,"results":"18","hashOfConfig":"15"},{"size":2967,"mtime":1608785932091,"results":"19","hashOfConfig":"15"},{"size":2915,"mtime":1608602652560,"results":"20","hashOfConfig":"15"},{"size":3038,"mtime":1608776279523,"results":"21","hashOfConfig":"15"},{"size":2027,"mtime":1608776572516,"results":"22","hashOfConfig":"15"},{"size":1461,"mtime":1608608965153,"results":"23","hashOfConfig":"15"},{"size":4667,"mtime":1608689668019,"results":"24","hashOfConfig":"15"},{"size":3996,"mtime":1608796171045,"results":"25","hashOfConfig":"15"},{"size":4190,"mtime":1608783805225,"results":"26","hashOfConfig":"15"},{"size":424,"mtime":1608775826813,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1gb9dbd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\index.js",[],["59","60"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Appbar.jsx",["61","62"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\useFetch.jsx",["63"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = (callback) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  axios.defaults.xsrfCookieName = \"csrftoken\";\r\n  axios.defaults.xsrfHeaderName = \"X-CSRFToken\"; //웹사이트 해킹 방지용도\r\n\r\n  const fetchInitData = async () => {\r\n    const defaultUser = [\r\n      {\r\n        id: 1,\r\n        name: \"홍길동\",\r\n        number: \"010-0101-0011\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"동영준\",\r\n        number: \"010-5551-0011\",\r\n      },\r\n    ];\r\n    // 기본적으로 axios.get(url), axios.post(url, data), axios.delete(url/id)를 통해서 쉽게 http 요청을 할 수 있습니다. 아주 좋은 모듈이죠?\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:8000/api/fbooks\");\r\n      const fbFromDJG = await response.data[0];\r\n      console.log(\"받아온 데이터:\", fbFromDJG);\r\n      callback({ type: \"SET_INIT_DATA\", payload: fbFromDJG });\r\n      setTimeout(() => {\r\n        setLoading(false); //서버에서 받아오는 시간을 loading으로 표현하려고 가짜로 넣은 것. setTimeout은 반드시 콜백함수속에 지연실행하고픈 내용을 넣어야 지연되어 실행된다.\r\n      }, 2000);\r\n    } catch (error) {\r\n      const defaultFbooks = { id: 2, information: defaultUser, search: \"\" };\r\n      callback({ type: \"SET_INIT_DATA\", payload: defaultFbooks });\r\n      setTimeout(() => {\r\n        setLoading(false); //서버에서 받아오는 시간을 loading으로 표현하려고 가짜로 넣은 것. setTimeout은 반드시 콜백함수속에 지연실행하고픈 내용을 넣어야 지연되어 실행된다.\r\n      }, 2000);\r\n      return console.log(\"서버에서 정보를 받아올 수 없습니다.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useFetch-useEffect 실행\");\r\n    fetchInitData();\r\n  }, []);\r\n\r\n  return loading;\r\n};\r\n\r\nexport default useFetch;\r\n",["64","65"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Search.jsx",["66"],"import React, { useRef, useCallback } from \"react\";\r\n// import { FbContext } from \"./FbStore\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    position: \"absolute\",\r\n  },\r\n  form: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"10px 0\",\r\n    width: \"95%\",\r\n  },\r\n}));\r\n\r\nconst Search = ({ dispatch }) => {\r\n  console.log(\"Search 실행\");\r\n  // const {dispatch} = useContext(FbContext);\r\n  const searchRef = useRef();\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"SEARCH_NAME\", payload: searchRef.current.value });\r\n    searchRef.current.value = \"\";\r\n  };\r\n  //컴포넌트가 재렌더링 되면 그안의 함수 선언도 다시 메모리에 띄워진다. 내용의 변화가\r\n  //없는데도 바뀌는 건 낭비. 이를 막기위해 '변화가 없을시 기존 함수를 다시써라'라는 의미로\r\n  //useCallback을 사용. 특정변화에만 반응하도록 하기 위해선 2번째 인자 활용. callback으로\r\n  //정의한 함수 바깥의 요소를 감시대상으로 선정하면 된다.\r\n\r\n  const handleGoback = useCallback((e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"SEARCH_NAME\", payload: \"\" });\r\n    searchRef.current.value = \"\";\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit=\"false\">\r\n      <input hidden=\"hidden\" />\r\n      {/* 인풋창이 2개이상이면 엔터키 눌러도 submit실행 안됨. 이를 막기위함 */}\r\n      <TextField\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        inputRef={searchRef}\r\n        size=\"small\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<SearchIcon />} //머리부분 아이콘\r\n        onClick={handleSearch}\r\n        style={{ transform: \"translate(-160px, -10%\" }}\r\n      >\r\n        Search\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<ReplyIcon />} //머리부분 아이콘\r\n        onClick={handleGoback}\r\n        style={{ transform: \"translate(168px, -10%\" }}\r\n      >\r\n        Contents\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default React.memo(Search);\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbReducer.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbStore.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\InputForm.jsx",["67"],"import React, { useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// import { FbContext } from \"./FbStore\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    boxShadow: \"1px 1px 3px #000\",\r\n    padding: \"30px 0\",\r\n    borderRadius: \"5px\",\r\n  },\r\n}));\r\n\r\nconst InputForm = ({ dispatch, index }) => {\r\n  const classes = useStyles();\r\n  // const { dispatch } = useContext(FbContext);\r\n  // let [idx, setIdx] = useState(index);\r\n  const nameRef = useRef();\r\n  const numberRef = useRef();\r\n\r\n  const addFbook = useCallback(\r\n    (e) => {\r\n      console.log(\"inputform데이터---\", nameRef);\r\n      e.preventDefault();\r\n      dispatch({\r\n        type: \"ADD_Fb_DATA\",\r\n        payload: {\r\n          id: index + 1,\r\n          name: nameRef.current.value,\r\n          number: numberRef.current.value,\r\n          editing: false,\r\n        },\r\n      });\r\n\r\n      let data = {\r\n        name: nameRef.current.value,\r\n        number: numberRef.current.value,\r\n        fbooks: 2, //반드시 DRF API상의 변수와 값을 맞춰줘야 한다. 틀리면 어디에 넣을지 모르므로\r\n      };\r\n      // axios.defaults.xsrfCookieName = \"csrftoken\";\r\n      // axios.defaults.xsrfHeaderName = \"X-CSRFToken\"; //웹사이트 해킹 방지용도\r\n      axios.post(\"http://127.0.0.1:8000/api/users/\", data);\r\n\r\n      nameRef.current.value = \"\";\r\n      numberRef.current.value = \"\";\r\n    },\r\n    [index]\r\n  );\r\n\r\n  console.log(\"InputForm 실행\");\r\n  return (\r\n    <>\r\n      <form className={classes.form}>\r\n        <TextField\r\n          // autoFocus=\"true\"\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          inputRef={nameRef}\r\n          size=\"small\"\r\n          autoFocus\r\n        />\r\n        <span>&nbsp;&nbsp;</span>\r\n        <TextField\r\n          label=\"Phone-NUM\"\r\n          variant=\"standard\"\r\n          size=\"small\"\r\n          inputRef={numberRef}\r\n        />\r\n        {/* <input type=\"text\" placeholder=\"이름\"></input>\r\n        <input type=\"text\" placeholder=\"전화번호\"></input> */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          startIcon={<SaveIcon />} //머리부분 아이콘\r\n          onClick={addFbook}\r\n          disableElevation //약간 돌출된 효과 없애기\r\n        >\r\n          Save\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(InputForm); //단순히 props의 값이 같은지만 얕은 비교 한다고 함. 해서 다를때만 다시 렌더링\r\n\r\n// 깊은 비교를 하고 싶을 경우 추가\r\n// function areEqual(preProps, nextProps) {\r\n//   return preProps !== nextProps;\r\n// }\r\n\r\n// export default React.memo(InputForm, areEqual);\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\App.js",["68"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\LocalStorageBtn.jsx",["69"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\PhoneInfo.jsx",["70","71","72"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignIn.jsx",["73","74"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignUp.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\NotFound.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":34,"column":13,"nodeType":"81","endLine":37,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":35,"column":20,"nodeType":"84","messageId":"85","endLine":35,"endColumn":61},{"ruleId":"86","severity":1,"message":"87","line":45,"column":6,"nodeType":"88","endLine":45,"endColumn":8,"suggestions":"89"},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"86","severity":1,"message":"92","line":42,"column":6,"nodeType":"88","endLine":42,"endColumn":8,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"92","line":56,"column":5,"nodeType":"88","endLine":56,"endColumn":12,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":15},{"ruleId":"95","severity":1,"message":"99","line":34,"column":9,"nodeType":"97","messageId":"98","endLine":34,"endColumn":16},{"ruleId":"86","severity":1,"message":"100","line":55,"column":6,"nodeType":"88","endLine":55,"endColumn":8,"suggestions":"101"},{"ruleId":"86","severity":1,"message":"100","line":96,"column":5,"nodeType":"88","endLine":96,"endColumn":12,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"99","line":99,"column":9,"nodeType":"97","messageId":"98","endLine":99,"endColumn":16},{"ruleId":"95","severity":1,"message":"103","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":24},{"ruleId":"95","severity":1,"message":"104","line":9,"column":8,"nodeType":"97","messageId":"98","endLine":9,"endColumn":16},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchInitData'. Either include it or remove the dependency array.","ArrayExpression",["107"],["105"],["106"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],["109"],"no-unused-vars","'FbStore' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["110"],["111"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"114","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchInitData]",{"range":"121","text":"122"},"Update the dependencies array to be: [dispatch]",{"range":"123","text":"124"},"Update the dependencies array to be: [dispatch, index]",{"range":"125","text":"126"},{"range":"127","text":"124"},"Update the dependencies array to be: [dispatch, input.name, input.number]",{"range":"128","text":"129"},[1541,1543],"[fetchInitData]",[1315,1317],"[dispatch]",[1625,1632],"[dispatch, index]",[1771,1773],[2778,2785],"[dispatch, input.name, input.number]"]
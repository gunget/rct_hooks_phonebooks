[{"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\index.js":"1","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Appbar.jsx":"2","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\useFetch.jsx":"3","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Search.jsx":"4","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbReducer.jsx":"5","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbStore.jsx":"6","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\InputForm.jsx":"7","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\App.js":"8","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\LocalStorageBtn.jsx":"9","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\PhoneInfo.jsx":"10","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignIn.jsx":"11","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignUp.jsx":"12","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\NotFound.jsx":"13"},{"size":174,"mtime":1607039129838,"results":"14","hashOfConfig":"15"},{"size":1332,"mtime":1608776817852,"results":"16","hashOfConfig":"15"},{"size":2037,"mtime":1609308051062,"results":"17","hashOfConfig":"15"},{"size":2665,"mtime":1609306371553,"results":"18","hashOfConfig":"15"},{"size":3053,"mtime":1609294069176,"results":"19","hashOfConfig":"15"},{"size":3010,"mtime":1609307117362,"results":"20","hashOfConfig":"15"},{"size":3106,"mtime":1609308635241,"results":"21","hashOfConfig":"15"},{"size":2083,"mtime":1608791280562,"results":"22","hashOfConfig":"15"},{"size":1461,"mtime":1608608965153,"results":"23","hashOfConfig":"15"},{"size":4723,"mtime":1609308504306,"results":"24","hashOfConfig":"15"},{"size":5870,"mtime":1609305557907,"results":"25","hashOfConfig":"15"},{"size":5241,"mtime":1609313507967,"results":"26","hashOfConfig":"15"},{"size":424,"mtime":1608775826813,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1gb9dbd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\index.js",[],["60","61"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Appbar.jsx",["62","63"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            <a\r\n              href=\"javascript:window.location.reload(true)\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              Phone Books\r\n            </a>\r\n            {/* <div onClick={window.location.reload}>Phone Books</div> */}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\useFetch.jsx",["64"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = (callback) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  axios.defaults.xsrfCookieName = \"csrftoken\";\r\n  axios.defaults.xsrfHeaderName = \"X-CSRFToken\"; //웹사이트 해킹 방지용도\r\n\r\n  const fetchInitData = async () => {\r\n    const defaultUser = [\r\n      {\r\n        id: 1,\r\n        name: \"홍길동\",\r\n        number: \"010-0101-0011\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"동영준\",\r\n        number: \"010-5551-0011\",\r\n      },\r\n    ];\r\n\r\n    const jwt = JSON.parse(localStorage.getItem(\"jwt\"));\r\n    const config = {\r\n      headers: {\r\n        Authorization: `jwt ${jwt.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://127.0.0.1:8000/api/fbooks/\",\r\n        config\r\n      );\r\n      const fbFromDJG = await response.data[0];\r\n      console.log(\"받아온 데이터:\", fbFromDJG);\r\n      callback({ type: \"SET_INIT_DATA\", payload: fbFromDJG });\r\n      setTimeout(() => {\r\n        setLoading(false); //서버에서 받아오는 시간을 loading으로 표현하려고 가짜로 넣은 것. setTimeout은 반드시 콜백함수속에 지연실행하고픈 내용을 넣어야 지연되어 실행된다.\r\n        callback({ type: \"SET_JWT\", payload: jwt });\r\n      }, 1000);\r\n    } catch (error) {\r\n      const defaultFbooks = { id: 2, information: defaultUser, search: \"\" };\r\n      callback({ type: \"SET_INIT_DATA\", payload: defaultFbooks });\r\n      setTimeout(() => {\r\n        setLoading(false); //서버에서 받아오는 시간을 loading으로 표현하려고 가짜로 넣은 것. setTimeout은 반드시 콜백함수속에 지연실행하고픈 내용을 넣어야 지연되어 실행된다.\r\n      }, 1000);\r\n      return console.log(\"서버에서 정보를 받아올 수 없습니다.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useFetch-useEffect 실행\");\r\n    fetchInitData();\r\n  }, []);\r\n\r\n  return loading;\r\n};\r\n\r\nexport default useFetch;\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\Search.jsx",["65"],"import React, { useRef, useCallback } from \"react\";\r\n// import { FbContext } from \"./FbStore\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    position: \"absolute\",\r\n  },\r\n  form: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"10px 0\",\r\n    width: \"95%\",\r\n  },\r\n}));\r\n\r\nconst Search = ({ dispatch }) => {\r\n  console.log(\"Search 실행\");\r\n  // const {dispatch} = useContext(FbContext);\r\n  const searchRef = useRef();\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"SEARCH_NAME\", payload: searchRef.current.value });\r\n    searchRef.current.value = \"\";\r\n  };\r\n  //컴포넌트가 재렌더링 되면 그안의 함수 선언도 다시 메모리에 띄워진다. 내용의 변화가\r\n  //없는데도 바뀌는 건 낭비. 이를 막기위해 '변화가 없을시 기존 함수를 다시써라'라는 의미로\r\n  //useCallback을 사용. 특정변화에만 반응하도록 하기 위해선 2번째 인자 활용. callback으로\r\n  //정의한 함수 바깥의 요소를 감시대상으로 선정하면 된다.\r\n\r\n  const handleGoback = useCallback((e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"SEARCH_NAME\", payload: \"\" });\r\n    searchRef.current.value = \"\";\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={false ? \"value\" : undefined}>\r\n      <input hidden=\"hidden\" />\r\n      {/* 인풋창이 2개이상이면 엔터키 눌러도 submit실행 안됨. 이를 막기위함 */}\r\n      <TextField\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        inputRef={searchRef}\r\n        size=\"small\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<SearchIcon />} //머리부분 아이콘\r\n        onClick={handleSearch}\r\n        style={{ transform: \"translate(-160px, -10%\" }}\r\n      >\r\n        Search\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<ReplyIcon />} //머리부분 아이콘\r\n        onClick={handleGoback}\r\n        style={{ transform: \"translate(168px, -10%\" }}\r\n      >\r\n        Contents\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default React.memo(Search);\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbReducer.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\FbStore.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\InputForm.jsx",["66"],"import React, { useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// import { FbContext } from \"./FbStore\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    boxShadow: \"1px 1px 3px #000\",\r\n    padding: \"30px 0\",\r\n    borderRadius: \"5px\",\r\n  },\r\n}));\r\n\r\nconst InputForm = ({ dispatch, index, jwt }) => {\r\n  const classes = useStyles();\r\n  // const { dispatch } = useContext(FbContext);\r\n  // let [idx, setIdx] = useState(index);\r\n  const nameRef = useRef();\r\n  const numberRef = useRef();\r\n\r\n  const addFbook = (e) => {\r\n    console.log(\"inputform데이터---\", nameRef);\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"ADD_Fb_DATA\",\r\n      payload: {\r\n        id: index + 1,\r\n        name: nameRef.current.value,\r\n        number: numberRef.current.value,\r\n        editing: false,\r\n      },\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `jwt ${jwt.token}`,\r\n      },\r\n    };\r\n    let data = {\r\n      name: nameRef.current.value,\r\n      number: numberRef.current.value,\r\n      fbooks: 2, //반드시 DRF API상의 변수와 값을 맞춰줘야 한다. 틀리면 어디에 넣을지 모르므로\r\n    };\r\n\r\n    // axios.defaults.xsrfCookieName = \"csrftoken\";\r\n    // axios.defaults.xsrfHeaderName = \"X-CSRFToken\"; //웹사이트 해킹 방지용도\r\n    axios.post(\"http://127.0.0.1:8000/api/users/\", data, config); // (url, data, 헤더정보)순\r\n\r\n    nameRef.current.value = \"\";\r\n    numberRef.current.value = \"\";\r\n  };\r\n\r\n  console.log(\"InputForm 실행\");\r\n  return (\r\n    <>\r\n      <form className={classes.form}>\r\n        <TextField\r\n          // autoFocus=\"true\"\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          inputRef={nameRef}\r\n          size=\"small\"\r\n          autoFocus\r\n        />\r\n        <span>&nbsp;&nbsp;</span>\r\n        <TextField\r\n          label=\"Phone-NUM\"\r\n          variant=\"standard\"\r\n          size=\"small\"\r\n          inputRef={numberRef}\r\n        />\r\n        {/* <input type=\"text\" placeholder=\"이름\"></input>\r\n        <input type=\"text\" placeholder=\"전화번호\"></input> */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          startIcon={<SaveIcon />} //머리부분 아이콘\r\n          onClick={addFbook}\r\n          disableElevation //약간 돌출된 효과 없애기\r\n        >\r\n          Save\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(InputForm); //단순히 props의 값이 같은지만 얕은 비교 한다고 함. 해서 다를때만 다시 렌더링\r\n\r\n// 깊은 비교를 하고 싶을 경우 추가\r\n// function areEqual(preProps, nextProps) {\r\n//   return preProps !== nextProps;\r\n// }\r\n\r\n// export default React.memo(InputForm, areEqual);\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\App.js",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\LocalStorageBtn.jsx",["67"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\PhoneInfo.jsx",["68","69"],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignIn.jsx",["70","71"],"import React, { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Time to share all\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n  alert: {\r\n    color: \"red\",\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn({ history }) {\r\n  const classes = useStyles();\r\n  const alertMessage = useRef();\r\n\r\n  const testSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      username: \"travis2\",\r\n      email: \"travis@travis.com\",\r\n      password: \"djg12345\",\r\n    };\r\n\r\n    function getSetJwt() {\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/api-jwt-auth/\", data)\r\n        .then((response) => {\r\n          console.log(\"새jwt:\", response.data);\r\n          return response.data; //리턴값이 다음 then으로 넘겨짐\r\n        })\r\n        .then((data) => {\r\n          localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n          return data;\r\n        })\r\n        .then((data) => history.push(\"/main/\")); //실제 데이터를 쓰진 않지만 이전 작업이 끝나고 실행되도록\r\n      //data를 더미 용도로 사용함\r\n    }\r\n    const checkUser = async () => {\r\n      const userRsp = await axios\r\n        .post(\"http://localhost:8000/rest-auth/login/\", data)\r\n        .catch((error) => error.response); //return글자를 안써야 error값이 리턴된다!!!!!\r\n      //또 axios는 error라고만 하면 response데이터를 볼 수 없다. error.response라 해야 한다.\r\n      //하나 더, 동기작업(시퀸스작업)을 하려면 반드시 'axios의 return값을 받는 변수명'으로 다음 작업을\r\n      //해야 한다.\r\n      if (userRsp.status === 200) {\r\n        getSetJwt();\r\n      } else {\r\n        console.log(\"error message:\", userRsp);\r\n        alertMessage.current.innerHTML =\r\n          \"ID 또는 비밀번호를 잘 못 입력하셨습니다.\";\r\n        alertMessage.current.className = classes.alert;\r\n      }\r\n    };\r\n\r\n    const jwtFromLS = JSON.parse(localStorage.getItem(\"jwt\"));\r\n    if (jwtFromLS) {\r\n      axios\r\n        .post(\"http://localhost:8000/api-jwt-auth/refresh/\", jwtFromLS)\r\n        .then((response) => {\r\n          localStorage.setItem(\"jwt\", JSON.stringify(response.data));\r\n        })\r\n        .then(history.push(\"/main/\"))\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      checkUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          // action=\"http://localhost:8000/rest-auth/login/\"\r\n          // method=\"post\"\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"Username\"\r\n            label=\"Username\"\r\n            name=\"Username\"\r\n            autoComplete=\"Username\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            label=\"Email\"\r\n            name=\"Email\"\r\n            autoComplete=\"Email\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            type=\"password\"\r\n            name=\"Password\"\r\n            label=\"Password\"\r\n            id=\"Password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={testSubmit}\r\n          >\r\n            로그인\r\n          </Button>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Link href=\"/SignUp\" variant=\"body2\">\r\n                <div ref={alertMessage}>\"계정이 없습니까? 회원가입하세요.\"</div>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\SignUp.jsx",[],"D:\\개인자료\\김건\\javascript\\react\\rct_hooks_phonebooks\\src\\componets\\NotFound.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":34,"column":13,"nodeType":"78","endLine":37,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":35,"column":20,"nodeType":"81","messageId":"82","endLine":35,"endColumn":61},{"ruleId":"83","severity":1,"message":"84","line":55,"column":6,"nodeType":"85","endLine":55,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":42,"column":6,"nodeType":"85","endLine":42,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"93","line":34,"column":9,"nodeType":"91","messageId":"92","endLine":34,"endColumn":16},{"ruleId":"83","severity":1,"message":"94","line":62,"column":6,"nodeType":"85","endLine":62,"endColumn":8,"suggestions":"95"},{"ruleId":"89","severity":1,"message":"93","line":104,"column":9,"nodeType":"91","messageId":"92","endLine":104,"endColumn":16},{"ruleId":"89","severity":1,"message":"96","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":24},{"ruleId":"89","severity":1,"message":"97","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":16},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchInitData'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["102"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},"Update the dependencies array to be: [fetchInitData]",{"range":"108","text":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},{"range":"112","text":"111"},[1680,1682],"[fetchInitData]",[1315,1317],"[dispatch]",[1887,1889]]